require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe EntriesController do

  # This should return the minimal set of attributes required to create a valid
  # Entry. As you add validations to Entry, be sure to
  # update the return value of this method accordingly.
  def valid_attributes
    {}
  end

  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # EntriesController. Be sure to keep this updated too.
  def valid_session
    {}
  end

  describe "GET index" do
    it "assigns all entries as @entries" do
      pending ""
    end
  end

  describe "GET show" do
    it "assigns the requested entry as @entry" do
      pending ""
    end
  end

  describe "GET new" do
    it "assigns a new entry as @entry" do
      pending ""
    end
  end

  describe "GET edit" do
    it "assigns the requested entry as @entry" do
      pending ""
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created entry as @entry" do
        pending ""
      end

      it "redirects to the created entry" do
        pending ""
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved entry as @entry" do
        # Trigger the behavior that occurs when invalid params are submitted
        pending ""
      end

      it "re-renders the 'new' template" do
        # Trigger the behavior that occurs when invalid params are submitted
        pending ""
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested entry" do
        # Assuming there are no other entries in the database, this
        # specifies that the Entry created on the previous line
        # receives the :update_attributes message with whatever params are
        # submitted in the request.
        pending ""
      end

      it "assigns the requested entry as @entry" do
        pending ""
      end

      it "redirects to the entry" do
        pending ""
      end
    end

    describe "with invalid params" do
      it "assigns the entry as @entry" do
        pending ""
      end

      it "re-renders the 'edit' template" do
        pending ""
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested entry" do
      pending ""
    end

    it "redirects to the entries list" do
      pending ""
    end
  end

end
